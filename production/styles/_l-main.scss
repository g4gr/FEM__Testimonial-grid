@use 'sass:string' ;
@use 'mixins' as M ;
@use "c-article" as A ;
@use 'h-colors' as C ;


$gridTemplateRows : ( string.unquote( '1/2' ) , string.unquote( '1 / 2') , string.unquote( '2 / 3') , string.unquote( '2 / 3') , string.unquote( '1 / 3' ) );
$gridTemplateColumns : ( string.unquote('1 / 5') , string.unquote('5 / 7') , string.unquote('1 / 3') , string.unquote('3 / 7') , string.unquote('7 / 9') ) ;
// $gridColors : ( string.unquote('1" : 'violet800' , string.unquote('2" : 'grey700' , string.unquote('3" : 'white' , string.unquote('4" : 'grey900' , string.unquote('5" : 'white') ;
$gridFontColor : ( "white" , "black" ) ;

.Main {
    grid-row : 2 / 3 ;
    grid-column : 3 / 11 ;
    height: 100% ;

    @include M.Display ( flex , row nowrap , center ) ;

  & .section {
    display : grid ;
    grid-template-rows : 400px 400px ;
    grid-template-columns : repeat( 8 , 1fr ) ;
    gap : 1rem ;

    & .article {
        padding : 2rem ;
        border-radius : 1rem ;

        @for $i from 1 through 5 {
        &:nth-child( #{ $i } ) {
            @each $row in $gridTemplateRows { 
                grid-row : $row ;
                @each $column in $gridTemplateColumns {
                    grid-column : $column ;

                    }
                    background-color : C.$c-violet800 ;

                    color : C.$c-white ;
                }
            }
        }

      @include A.article__header ;
      @include A.article__main ;
    }
  }

}

